#!/bin/bash

source /usr/lib/ayer/functions.sh

target_feature=$1
target_branch=$2

hoy_init

[ -n "$target_feature" ] || die "usage: $(basename $0) feature [branch]"

if git rev-parse "$target_feature" &>/dev/null; then
    # the feature already exists - just checkout
    target_branch=$(get_trunk "$target_feature")
    git checkout "$target_feature"
    git submodule foreach git checkout "$target_feature"
else
    if [ -n "$target_branch" ]; then
        if [ "$target_branch" != "master" ]; then
            target_branch=${target_branch%_trunk}_trunk
        fi
    else
        target_branch=$(get_trunk)
    fi

    if ! git rev-parse "origin/$target_branch" &>/dev/null; then
        die "trunk \`$target_branch' is not found"
    fi

    git checkout -t -B "$target_feature" "origin/$target_branch"
    git submodule init
    git submodule update
    git submodule foreach git checkout -t -B "$target_feature" "origin/$target_branch"
fi

echo "started feature $target_feature for branch $target_branch"

# setup commit-msg hooks
if [ ! -f .git/hooks/commit-msg ]; then
    gerrit_configure_from_origin
    scp -p -P "$GERRIT_PORT" "${GERRIT_SSH}:hooks/commit-msg" .git/hooks >/dev/null
fi
commit_hook=$(readlink -f .git/hooks/commit-msg)
find .git/modules -name hooks -type d | while read hooks_dir; do
    ln -sf "$commit_hook" "$hooks_dir"
done
